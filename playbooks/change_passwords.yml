---
- name: Change Administrative Passwords for all super users
  hosts: all
  gather_facts: false
  roles:
    # Requires old and current password
    - role: ibm.isam.set_admin_pw
      tags: [admin, password]

    # Get appliance facts using updated admin password
    - role: ibm.isam.get_firmware

    # Update cn=root,SecAuthority=Default
    - role: ibm.isam.web.set_embedded_ldap_admin_pw
      tags: [embedded_ldap, root, password]

    # Username/password Authentication Mechanism uses Embedded LDAP cn=root
    - role: ibm.isam.update_auth_mech
      tags: [authentication, mechanism, update]
      update_auth_mech_name: Username Password
      update_auth_mech_uri: urn:ibm:security:authentication:asf:mechanism:password
      update_auth_mech_typeName: Username Password
      update_auth_mech_description: Username password authentication
      update_auth_mech_attributes: "{{ auth_mech_user_pwd_attributes | default(None) }}"
      update_auth_mech_properties: "{{ auth_mech_user_pwd_properties | default(None) }}"
      update_auth_mech_predefined: true
      when:
        - auth_mech_user_pwd_attributes is defined
        - auth_mech_user_pwd_properties is defined
        - firmware_ret_obj is defined
        - ('mga' in firmware_ret_obj['ansible_facts']['activations'])

    - role: ibm.isam.web.set_embedded_ldap_user
      tags: [embedded_ldap, user, password]
      web_embeddedldap_user_username: "{{ aac_userid | default(None) }}"
      web_embeddedldap_user_password: "{{ aac_password | default(None) }}"
      when: aac_userid is defined and aac_password is defined

    # Update the BA credentials used within the appliance Reverse Proxy
    - role: ibm.isam.update_reverseproxy_conf
      tags: [reverseproxy, update, password]
      update_reverseproxy_conf_reverseproxy_id: "{{ reverseproxy_instance_name }}"
      update_reverseproxy_conf_entries:
        - { stanza_id: 'tfim-cluster:oauth-cluster', entry_id: basic-auth-user, value_id: "{{ aac_userid }}" }
        - { stanza_id: 'tfim-cluster:oauth-cluster', entry_id: basic-auth-passwd, value_id: "{{ aac_password }}" }
        - { stanza_id: 'rtss-cluster:cluster1', entry_id: basic-auth-user, value_id: "{{ aac_userid }}" }
        - { stanza_id: 'rtss-cluster:cluster1', entry_id: basic-auth-passwd, value_id: "{{ aac_password }}" }
      when:
        - aac_userid is defined
        - aac_password is defined
        - firmware_ret_obj is defined

    # Requires old and current password
    - role: ibm.isam.execute_pdadmin
      tags: [pdadmin, sec_master, password]
      execute_pdadmin_isamuser: "{{ sec_master_id }}"
      execute_pdadmin_isampwd: "{{ sec_master_old_pwd }}"
      execute_pdadmin_commands:
        - user modify {{ sec_master_id }} password {{ sec_master_pwd }}
      when:
        - sec_master_old_pwd is defined
        - sec_master_pwd is defined
        - sec_master_id is defined
