---
# Configure
#
#   Example:
#     access_control_policies:
#       - name: test_access_policy
#         attributesrequired: false
#         description: ""
#         dialect: "urn:oasis:names:tc:xacml:2.0:policy:schema:os"
#         predefined: False
#         policy: '<PolicySet xmlns=\"urn:oasis:names:tc:xacml:2.0:policy:schema:os\" PolicySetId=\"urn:ibm:security:config-policy\"
#                  PolicyCombiningAlgId=\"urn:oasis:names:tc:xacml:1.0:policy-combining-algorithm:first-applicable\"><Description></Description><PolicySet
#                  xmlns="urn:oasis:names:tc:xacml:2.0:policy:schema:os"
#                  xmlns:xacml-context="urn:oasis:names:tc:xacml:2.0:context:schema:os" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
#                  xsi:schemaLocation="urn:oasis:names:tc:xacml:2.0:policy:schema:os
#                  http://docs.oasis-open.org/xacml/access_control-xacml-2.0-policy-schema-os.xsd"
#                  PolicySetId="urn:ibm:security:config-policy" PolicyCombiningAlgId="urn:oasis:names:tc:xacml:1.0:policy-combining-algorithm:deny-overrides">
#                  <Description/><Target/><Policy PolicyId="urn:ibm:security:rule-container:0"
#                  RuleCombiningAlgId="urn:oasis:names:tc:xacml:1.0:rule-combining-algorithm:first-applicable"><Target/><Rule
#                  RuleId="urn:ibm:security:rule:0" Effect="Permit"/></Policy></PolicySet>'
- name: Configure access control policies
  hosts: "{{ hosts | default('all') }}"
  gather_facts: false
  tasks:
    - name: Role ibm.isam.aac.configure_access_control_policies
      ansible.builtin.import_role:
        name: ibm.isam.aac.configure_access_control_policies
      tags: configure_access_control_policies
