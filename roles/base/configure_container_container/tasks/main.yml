---
# main task to configure dns
- name: Help INFO (-e help=true)
  ansible.builtin.pause:
    echo: true
    prompt: |
      NAME
        configure_container_container

      DESCRIPTION
        Role to configure containers.
        This is a very simple implementation, that allows to start a container deployment

        Other roles are in the making to work with images, repositories and operations.

      STEPS
        1) Configure volumes used in the container
        2) Pull image references in the container deployment
        3) Start container deployment (container_action=set)
        4) Delete containers (container_action=delete)

      EXAMPLES
        ansible-playbook -i [...] ibm.isam.base.configure_container.yml

      INVENTORY
      ==========
      base_ivia_containers:
        - name: iag1
          image: "icr.io/ibmappgateway/ibm-application-gateway:23.10"
          type: "ibm-application-gateway"
          ports:
            - name: https
              value: "0.0.0.0:30443"
            - name: http
              value: "0.0.0.0:30080"
          volumes:
            - name: "configuration"
              volume_name: "config.volume"


      INTERACTION
        ENTER         = continue
        Ctrl+C + 'C'  = continue
        Ctrl+C + 'A'  = abort
  when: help is defined

- name: Create Container Volumes
  ibm.isam.isam:
    log: "{{ log_level | default('INFO') }}"
    force: "{{ force | default(False) }}"
    action: ibmsecurity.isam.base.container_ext.volume.add # set does not exist (yet)
    isamapi:
      name: "{{ _role_item.volume_name }}"
  tags:
    - volumes
  loop: "{{ base_ivia_containers | map(attribute='volumes') | list | flatten }}"
  loop_control:
    label: "Volume: {{ _role_item.volume_name | default('') }}"
    loop_var: _role_item
  when:
    - _role_item is defined

- name: Pull images
  ibm.isam.isam:
    log: "{{ log_level | default('INFO') }}"
    force: "{{ force | default(False) }}"
    action: ibmsecurity.isam.base.container_ext.image.set
    isamapi:
      image: "{{ _role_item }}"
  tags:
    - images
  loop: "{{ base_ivia_containers | map(attribute='image') | list | flatten | unique }}"
  loop_control:
    label: "Image: {{ _role_item | default('') }}"
    loop_var: _role_item
  when:
    - _role_item is defined

- name: Configure Container Extensions containers
  ansible.builtin.include_tasks:
    file: singlecontainer.yml
    apply:
      tags:
        - containers
  loop: "{{ base_ivia_containers }}"
  loop_control:
    loop_var: container_item
    label: Creating - {{ container_item.name | default('skip') }}
  when:
    - base_ivia_containers | length>0
    - container_item.container_action | default("set") in ["set", "update", "add"]

- name: Delete Container Extensions containers
  ansible.builtin.include_tasks:
    file: singlecontainerdelete.yml
    apply:
      tags:
        - containers
        - delete
  loop: "{{ base_ivia_containers }}"
  loop_control:
    loop_var: container_item
    label: Deleting - {{ container_item.name | default('skip') }}
  when:
    - base_ivia_containers | length>0
    - container_item.container_action is defined
    - container_item.container_action == "delete"
