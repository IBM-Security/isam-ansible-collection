---
# main task to configure fido2
- name: Help INFO (-e help=true)
  ansible.builtin.pause:
    echo: true
    prompt: |
      NAME
        configure_fido2

      DESCRIPTION
        Role to configure fido2 [metadata, registrations, relying-parties, u2f-migration]

      STEPS
        1) Configure fido2 configurations
        2) Commit changes

      EXAMPLES
        ansible-playbook -i [...] ibm.isam.configure_fido2

      INVENTORY
      ==========
      # configure fido2
      fido2_configurations:
        # Retrieve all metadata
        - fido2_action: metadata.get_all
        # Retrieve a specific metadata
        - fido2_action: metadata.get
          name: metadata.json
        # Export specific metadata to disc
        - fido2_action: metadata.export_file
          name: metadata.json
          filename: files/fido2/metadata.json
        # Delete specific metadata entry by name
        - fido2_action: metadata.delete
          name: metadata.json
        # Import metadata from disc
        - fido2_action: metadata.import_file
          filename: files/fido2/metadata.json

        # Retrieve all FIDO2 configurations of all relying parties
        - fido2_action: relying_parties.get_all
        # Retrieve entire FIDO2 configruation of a specific relying party
        - fido2_action: relying_parties.get
          name: DEMO
        # Retrieve only FIDO2 relying party ID on the appliance
        - fido2_action: relying_parties.search
          name: DEMO
        # Delete a FIDO2 relying party
        - fido2_action: relying_parties.delete
          name: DEMO
        # Create or update fido2 relying party
        # set will call add (new relying party) or update (existing relying party) respectivly with a config comparisson prior to the execution of the change
        - fido2_action: relying_parties.set
          name: DEMO
          rpId: example.com
          relyingPartyOptions:
            impersonationGroup: adminGroup
            webauthnSpecEnforcement: true
          fidoServerOptions:
            origins:
              - https://example.com
            metadataSet: []
            metadataSoftFail: true
            attestation:
              statementTypes:
                - basic
                - self
                - attCA
                - none
              statementFormats:
                - fido-u2f
                - packed
                - tpm
                - android-key
                - android-safetynet
                - none
              publicKeyAlgorithms:
                - SHA256withECDSA
                - SHA256withRSA
            android-safetynet:
              attestationMaxAge: 60000
              clockSkew: 30000

        # Retrieve all FIDO2 registrations
        - fido2_action: registrations.get_all
        # Retrieve a specific FIDO2 registration for a given credentialId
        - fido2_action: registrations.get
          credentialId: CKYuA1IJW4wY-FnKY_gLubEfaqEJK6_6E4t8I_JWgmE
        # Delete all FIDO2 registrations for a given username
        - fido2_action: registrations.delete
          username: testuser01

        # Retrieve a count of U2F Registrations yet to be migrated
        - fido2_action: u2f_migration.get_all
        # Migrate U2F Registrations
        - fido2_action: u2f_migration.migrate
          batchSize: '1000' # The number of registrations to migrate in a single batch
          batchCount: '5' # The number of batches to migrate. Can be set to 'all' to indicate that all registrations should be migrated.
      ==========

      INTERACTION
        ENTER         = continue
        Ctrl+C + 'C'  = continue
        Ctrl+C + 'A'  = abort
  when: help is defined

- name: Configure fido2
  ibm.isam.isam:
    log: "{{ log_level | default(omit) }}"
    force: "{{ force | default(omit) }}"
    action: ibmsecurity.isam.aac.fido2.{{ item.fido2_action }}
    isamapi: "{{ item | ibm.isam.exclude('fido2_action') | combine({'filename': ((homedir == '') | ternary('', homedir + '/')) + item.filename} if (item.filename is defined) else {}) }}"
  when:
    - item.fido2_action is defined
    - item.fido2_action == fido2_action
  loop: "{{ fido2_configurations }}"
  loop_control:
    label: "{{ {'fido2_action': item.fido2_action} | combine({'name': item.name} if (item.name is defined) else {}) |
       combine({'username': item.username} if (item.username is defined) else {}) |
       combine({'rpId': item.rpId} if (item.rpId is defined) else {}) | combine({'id': item.id} if (item.id is defined) else
       {}) | combine({'credentialId': item.credentialId} if (item.credentialId is defined) else {}) |
       combine({'filename': homedir + '/' + item.filename} if (item.filename is defined) else {}) }}"
  notify: Commit Changes
  register: ret_obj
