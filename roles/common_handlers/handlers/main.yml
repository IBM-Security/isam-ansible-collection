---
# Important: The order of handlers is crucial. See documentation:
#   http://docs.ansible.com/ansible/glossary.html#notify
# <cut>Handlers are run in the order they are listed, not in the order that they are notified.</cut>
- name: Commit Changes and Restart
  ibm.isam.isam:
    log: "{{ log_level | default(omit) }}"
    force: "{{ force | default(omit) }}"
    action: ibmsecurity.isam.appliance.commit_and_restart_and_wait

- name: Commit Changes for both Appliance and Docker
  ibm.isam.isam:
    log: "{{ log_level | default(omit) }}"
    force: "{{ force | default(omit) }}"
    action: ibmsecurity.isam.appliance.commit
  listen: Commit Changes

- name: Publish Changes (docker)
  ibm.isam.isam:
    lmi_port: "{{ port | default(omit) }}"
    log: "{{ log_level | default(omit) }}"
    force: "{{ force | default(omit) }}"
    action: ibmsecurity.isam.docker.publish.publish_changes
  when:
    - '"model" in ansible_facts and ansible_facts.model == "Docker"'
    - docker_publish_changes | bool
  listen: Commit Changes

# Commit and Restart may cause LMI to restart - so wait to be safe
- name: Await Appliance Commit LMI Response
  ansible.builtin.wait_for:
    host: "{{ ansible_host | default(inventory_hostname) }}"
    port: "{{ lmi_port | default(443) }}"
    delay: 30
    timeout: "{{ start_config_wait_time }}"
    connect_timeout: 2
    sleep: 5
    state: started
  when: not ansible_check_mode

- name: Restart Web Runtime
  ibm.isam.isam:
    log: "{{ log_level | default(omit) }}"
    force: "{{ force | default(omit) }}"
    action: ibmsecurity.isam.web.runtime.process.execute
    isamapi:
      operation: restart

# This is a two part handler - first one gets all reverse proxies, second one restarts all of them
# Get all reverse proxies in appliance - also set changed flag to trigegr next handler
- name: Restart Reverse Proxy
  ibm.isam.isam:
    log: "{{ log_level | default(omit) }}"
    force: "{{ force | default(omit) }}"
    action: ibmsecurity.isam.web.reverse_proxy.instance.get
  notify: Restart all Reverse Proxys - checks if flagged for restart
  changed_when: true
  register: reverseproxy_list

# Note: Restart function will only restart if required - set force to True to avoid that kind of check
- name: Restart all Reverse Proxys - checks if flagged for restart
  ibm.isam.isam:
    log: "{{ log_level | default(omit) }}"
    force: "{{ force | default(omit) }}"
    action: ibmsecurity.isam.web.reverse_proxy.instance.execute
    isamapi:
      id: "{{ item.id }}"
      operation: restart
  when: reverseproxy_list is defined and 'data' in reverseproxy_list
  with_items: "{{ reverseproxy_list['data'] }}"

- name: Reload Liberty Runtime
  ibm.isam.isam:
    log: "{{ log_level | default(omit) }}"
    force: "{{ force | default(omit) }}"
    action: ibmsecurity.isam.base.runtime.process.execute
    isamapi:
      operation: reload
  when: not ansible_check_mode

- name: Restart AAC Runtime
  ibm.isam.isam:
    log: "{{ log_level | default(omit) }}"
    force: "{{ force | default(omit) }}"
    action: ibmsecurity.isam.base.runtime.process.execute
    isamapi:
      operation: restart
  when: not ansible_check_mode

- name: Reboot Appliance
  ibm.isam.isam:
    log: "{{ log_level | default(omit) }}"
    force: "{{ force | default(omit) }}"
    action: ibmsecurity.isam.appliance.reboot
  notify: Await Appliance LMI Response
  when: not ansible_check_mode

- name: Restart LMI
  ibm.isam.isam:
    log: "{{ log_level | default(omit) }}"
    force: "{{ force | default(omit) }}"
    action: ibmsecurity.isam.base.lmi.restart

- name: Await Appliance LMI Response
  ansible.builtin.wait_for:
    host: "{{ ansible_host | default(inventory_hostname) }}"
    port: "{{ lmi_port | default(443) }}"
    delay: 30
    timeout: "{{ start_config_wait_time }}"
    connect_timeout: 2
    sleep: 5
    state: started
  when: not ansible_check_mode

- name: Restart LMI and wait
  ibm.isam.isam:
    log: "{{ log_level | default(omit) }}"
    force: "{{ force | default(omit) }}"
    action: ibmsecurity.isam.base.lmi.restart_and_wait
