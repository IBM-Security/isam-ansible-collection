---
# main task to configure reverse proxy instances

- name: Help INFO (-e help=true)
  ansible.builtin.pause:
    echo: true
    prompt: |
      NAME
        configure_reverseproxy_junctions

      DESCRIPTION
        Role to configure reverse proxy junctions

      STEPS
        1) Configure reverse proxy junctions per instance [-e inst_name=<instance> -e junction_point=</jct_point>]
        1.a) Create junction with 1st junction server
        1.b) Add junction servers
        1.c) Delete junction servers that are missing in the inventory [-e delete_junction_server=True]
        2) Delete junctions that are missing in the inventory [-e delete_junctions=True]
        3) Commit changes

      EXAMPLES
        ansible-playbook -i [...] ibm.isam.web.configure_reverseproxy_junctions.yml // create and add all inventory defined junctions
        // create, add all inventory defined junctions and delete all junction servers or junctions that are missing from inventory
        ansible-playbook -i [...] ibm.isam.web.configure_reverseproxy_junctions.yml -e delete_junction_server=True -e delete_junctions=True
        // create and add inventory defined junctions for instance default only
        ansible-playbook -i [...] ibm.isam.web.configure_reverseproxy_junctions.yml -e inst_name=default
        ansible-playbook -i [...] ibm.isam.web.configure_reverseproxy_junctions.yml -e junction_point=/jct1 // do all tasks only if junction equals /jct1
        // if junction_point renamed in inventory to /jct2, then this command can reconfigure that junction server under the new name
        ansible-playbook -i [...] ibm.isam.web.configure_reverseproxy_junctions.yml -e junction_point=/jct2
           -e delete_junction_server=True -e delete_junctions=True
        // re-configure junction /jct1
        ansible-playbook -i [...] ibm.isam.web.configure_reverseproxy_junctions.yml -e junction_point=/jct1 -e force=True
        ansible-playbook -i [...] ibm.isam.web.configure_reverseproxy_junctions.yml -e control_setall_junctions=True # Use the faster mode

      INVENTORY
      ==========
      # configure /tcp1 junction for instance default
      instances:
        - inst_name: default
          junctions:
            # necessary parameters
            - junction_point: "/jct1"
              junction_type: "tcp"
              servers:
                - server_hostname: "localhost"
                  server_port: 443
            # all parameters
            - junction_point: "/jct2"
              junction_type: "tcp"
              transparent_path_junction: "yes"
              basic_auth_mode: filter
              remote_http_header:
                - iv_user
                - iv_creds
                - iv_user_l
              scripting_support: "yes"
              stateful_junction: "yes"
              junction_hard_limit: 80
              junction_soft_limit: 60
              tfim_sso: "yes"
              mutual_auth: "no"
              insert_ltpa_cookies: "yes"
              insert_session_cookies: "no"
              version_two_cookies: "yes"
              ltpa_keyfile_password: "'{{ '{{' }} ltpa_pwd {{ '}}' }}'"
              ltpa_keyfile: "ltpafile.key"
              request_encoding: "utf8_uri"
              enable_basic_auth: "no"
              key_label: "key1_certificate"
              gso_resource_group: "gsogroup1"
              junction_cookie_javascript_block: "inhead"
              client_ip_http: "no"
              authz_rules: "yes"
              fsso_config_file: "fsso.file"
              username: "user1"
              password: "'{{ '{{' }} user1_password {{ '}}' }}'"
              delegation_support: "no" # only for ssl junctions
              http2_junction: "no"
              http2_proxy: "no"
              sni_name: "iexist.example.com"
              description: "Test application point of contact"
              servers:
                - server_hostname: "server1.example.com"
                  virtual_hostname: "idontexist.com:81"
                  query_contents: /server2/cgi-bin/query
                  https_port: 444
                  http_port: 81
                  server_port: 443
                - server_hostname: "server2.example.com"
                  server_dn: "CN=server2.example.com"
                  virtual_https_hostname: "idontexist.com:444"
                  case_sensitive_url: 'no'
                  windows_style_url: 'no'
                  vhost_label: "label2"
                  server_uuid: server2_uuid
                  proxy_hostname: proxy.ibm.com
                  proxy_port: 82
                  sms_environment: vhostA.example.com
                  local_ip: "192.168.42.1"
                  server_port: 443
      ==========

      INTERACTION
        ENTER         = continue
        Ctrl+C + 'C'  = continue
        Ctrl+C + 'A'  = abort
  when: help is defined

- name: Include over all instances and junctions
  ansible.builtin.include_tasks: include_junctions.yml
  with_subelements:
    - "{{ instances }}"
    - junctions
    - skip_missing: true
  when:
    - not (control_setall_junctions | bool)
    - item[1].junction_point == (junction_point | default(item[1].junction_point))
    - item[0].inst_name == (inst_name | default(item[0].inst_name))

  loop_control:
    label: "{inst_name: {{ item[0].inst_name }}, junction_point: {{ item[1].junction_point }}}"

- name: Include to delete undefined junctions [-e delete_junctions=True]
  ansible.builtin.include_tasks: include_delete_junctions.yml
  loop: "{{ instances }}"
  when:
    - not (control_setall_junctions | bool)
    - (delete_junctions | bool)
  loop_control:
    label: "{inst_name: {{ item.inst_name }}, delete_junctions: {{ delete_junctions }}}"

- name: Create all junctions and servers (set_all)
  ibm.isam.isam:
    log: "{{ log_level | default(omit) }}"
    force: "{{ force | default(omit) }}"
    action: ibmsecurity.isam.web.reverse_proxy.junctions.set_all
    isamapi: "{{ {'junctions': item.junctions} | combine({'reverseproxy_id': item.inst_name}) }}"
  loop: "{{ instances }}"
  loop_control:
    label: Processing junctions {{ item.junctions | default([]) | map(attribute='junction_point') | join(', ') }} for {{ item.inst_name | default('') }}
  when:
    - control_setall_junctions | bool
    - item.junctions is defined
  register: ret_obj
